[package]
name = "daedelus"
version = "0.1.0"
edition = "2024"

[dependencies]
graphics = { version = "0.3.9", features = ["app_utils"] }
egui = "0.31.1"
#egui_tiles = "0.12.0" # For layouts etc. Experimenting
egui-file-dialog = "0.9.0" #  For file dialogs.

cfg-if = "1.0.0"

lin_alg = { version = "1.1.8", features = ["encode"] }

# todo: Use https://github.com/bempp/kifmm when ready. Adapt for Windows.
barnes_hut = { version = "1.0.6"}  # enc temp rem

# todo: Qhull is temp until we find a way to generate non-convex meshes.
# todo: Relies on C FFI. This may complicate compiling.
#qhull = "0.4.0"

na_seq = "0.2.7"

# For loading and saving config
bincode = "2.0.1"

rayon = "1.10.0"  # Parallel execution on CPU using thread pools.
# Keep this cuda version in sync with what you have installed on the system.
cudarc = { version = "0.16.4", optional=true, features=["cuda-12060"] }

# For reading PDB and mmCIF files
pdbtbx = "0.12.0"


# These web deps are for querying RCSB.
ureq = "3.0.4"
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"
webbrowser = "1.0.1"

rand = "0.9.1"
regex = "1.11.1"

# nalgebra: For solving linear systems of equations when generating partial changes.
nalgebra = "0.33.2"
cuda_setup = { version = "0.1.3", optional = true }


# We use these when developing locally to reduce friction.
[patch.crates-io]
graphics = { path = "../graphics" }
lin_alg = { path = "../lin_alg" }
cuda_setup = { path = "../cuda_setup", optional = true }
pdbtbx = { path = "../pdbtbx" }
barnes_hut = { path = "../barnes_hut" }


[build-dependencies]
cuda_setup = { version = "0.1.3", optional = true }



# We feature-gate the CUDA dependency, so this program can be run on computers that don't have a
# suitable graphics chip.
[features]
default = ["cuda"]
cuda = ["cudarc", "cuda_setup/cuda-12060", "lin_alg/cuda-12060"]