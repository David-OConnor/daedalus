[package]
name = "daedalus"
version = "0.1.0"
edition = "2024"

[dependencies]
graphics = { version = "0.4.6", features = ["app_utils"] }
egui = "0.32.0"

#egui_tiles = "0.12.0" # For layouts etc. Experimenting
egui-file-dialog = "0.11.0" #  For file dialogs.

cfg-if = "1.0.1"

lin_alg = { version = "1.3.5", features = ["encode"] }
na_seq = "0.3.6"
bio_apis = {  version = "0.1.6", features = ["encode"] }
bio_files = "0.2.16"
mcubes = "0.1.4"
#dynamics = { version = "0.1.0", features = ["encode"] }
dynamics = { path = "../dynamics", features = ["encode"] }

# For loading and saving config
bincode = "2.0.1"
rayon = "1.10.0"  # Parallel execution on CPU using thread pools.
# Keep this cuda version in sync with what you have installed on the system.

# todo: Do we want the `dynamic-linking` cudarc feature? Instead of dynamic-loading?
# todo: If you use it, rem def features, and add specifically the other defaults.

# Static linking results in an error when compiling. Dyanmic loading seems to require the PC that runs it
# to have CUDA installed. So, we use dynamic-linking.

# It appears, to work on systems without nvidia drivers, we need dynamic-linking on Linux, and dynamic-loading
# on Windows. # todo: Still not able to get running on a Linux machine that doesn't have CUDA
[target.'cfg(not(target_os = "windows"))'.dependencies]
cudarc = { version = "0.17.2", default-features = false, features = ["std", "driver", "dynamic-linking", "cuda-13000"], optional=true }
[target.'cfg(target_os = "windows")'.dependencies]
cudarc = { version = "0.17.2", default-features = false, features = ["std", "driver", "dynamic-loading", "cuda-13000"], optional=true }

# todo: YOu may be able to remove this.
rand = "0.9.2"
regex = "1.11.1"

chrono = "0.4.41"


# We use these when developing locally to reduce friction.
[patch.crates-io]
#graphics = { path = "../../graphics" }
#lin_alg = { path = "../../lin_alg" }
#na_seq = { path = "../na_seq" }
bio_apis = { path = "../bio_apis" }
#mcubes = { path = "../mcubes" }
bio_files = { path = "../bio_files" }
dynamics = { path = "../dynamics" }


[build-dependencies]
cuda_setup = { version = "0.1.7", optional = true }
# This is for embedding an application icon, on Windows.
winresource = "0.1.20"

# We feature-gate the CUDA dependency, so this program can be run on computers that don't have a
# suitable graphics chip.
[features]
default = ["cuda"]

cuda = ["cuda_setup", "cudarc", "lin_alg/cuda", "dynamics/cuda"]


[profile.release]
strip = true  # Strip symbols from binary. Size reduction on Linux/Mac.